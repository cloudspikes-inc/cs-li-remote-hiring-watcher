name: Terraform Infrastructure Pipeline

on:
  pull_request:
    paths:
      - "infra/**"
    branches:
      - main
      - develop
      - "feature/**"
  workflow_dispatch:
    inputs:
      environment:
        description: "Select environment to apply"
        required: true
        default: "test"
        type: choice
        options:
          - test
          - dev
          - prod

permissions:
  contents: read
  pull-requests: write
  issues: write

env:
  TF_VERSION: "1.6.0"
  AWS_DEFAULT_REGION: "ap-south-1"

jobs:
  # -----------------------------------------
  # Job 1: Terraform Plan (Auto on PR)
  # -----------------------------------------
  terraform-plan:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment: [test] # Expand later if needed

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_TEST }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_TEST }}
          aws-region: ${{ env.AWS_DEFAULT_REGION }}

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v40
        with:
          files: |
            infra/**

      - name: Terraform Format Check
        if: steps.changed-files.outputs.any_changed == 'true'
        working-directory: infra/envs/${{ matrix.environment }}
        run: terraform fmt -check -recursive

      - name: Terraform Init
        if: steps.changed-files.outputs.any_changed == 'true'
        working-directory: infra/envs/${{ matrix.environment }}
        run: terraform init

      - name: Terraform Validate
        if: steps.changed-files.outputs.any_changed == 'true'
        working-directory: infra/envs/${{ matrix.environment }}
        run: terraform validate

      - name: Terraform Plan
        if: steps.changed-files.outputs.any_changed == 'true'
        working-directory: infra/envs/${{ matrix.environment }}
        env:
          TF_VAR_slack_webhook_url_test: ${{ secrets.SLACK_WEBHOOK_URL_TEST }}
        run: |
          terraform plan -out=tfplan-${{ matrix.environment }}.out
          terraform show -no-color tfplan-${{ matrix.environment }}.out > tfplan-${{ matrix.environment }}.txt

      - name: Upload Terraform Plan
        if: steps.changed-files.outputs.any_changed == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: terraform-plan-${{ matrix.environment }}
          path: infra/envs/${{ matrix.environment }}/tfplan-${{ matrix.environment }}.*
          retention-days: 5

  # -----------------------------------------
  # Job 2: Terraform Apply (Manual trigger)
  # -----------------------------------------
  terraform-apply:
    if: github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }} # ðŸ‘ˆ Secure environment gate
    concurrency: terraform-${{ github.event.inputs.environment }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets['AWS_ACCESS_KEY_ID_TEST' + github.event.inputs.environment | upper] }}
          aws-secret-access-key: ${{ secrets['AWS_SECRET_ACCESS_KEY_TEST' + github.event.inputs.environment | upper] }}
          aws-region: ${{ env.AWS_DEFAULT_REGION }}

      - name: Download Terraform Plan Artifact
        uses: actions/download-artifact@v4
        with:
          name: terraform-plan-${{ github.event.inputs.environment }}
          path: infra/envs/${{ github.event.inputs.environment }}

      - name: Terraform Apply
        working-directory: infra/envs/${{ github.event.inputs.environment }}
        env:
          TF_VAR_slack_webhook_url_test: ${{ secrets.SLACK_WEBHOOK_URL_TEST }}
        run: |
          echo "ðŸš€ Applying Terraform changes for ${{ github.event.inputs.environment }}..."
          terraform apply -auto-approve tfplan-${{ github.event.inputs.environment }}.out

      - name: Terraform Output
        working-directory: infra/envs/${{ github.event.inputs.environment }}
        run: terraform output
